version: '3.8'

services:
  # ============= 데이터 수집 계층 =============
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - fds-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG_RETENTION_HOURS: 168
    networks:
      - fds-network

  # ============= 데이터베이스 계층 =============
  mariadb_account_system:
    image: mariadb:11.4
    container_name: mariadb_account_system
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: account_system
      MYSQL_USER: fds_user
      MYSQL_PASSWORD: fds_password
    ports:
      - "3306:3306"
    volumes:
      - ./config/init-account-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - mariadb_account_data:/var/lib/mysql
    networks:
      - fds-network

  mariadb_fds:
    image: mariadb:11.4
    container_name: mariadb_fds
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: fds_system
      MYSQL_USER: fds_user
      MYSQL_PASSWORD: fds_password
    ports:
      - "3307:3306"
    volumes:
      - ./config/init-fds-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - mariadb_fds_data:/var/lib/mysql
    networks:
      - fds-network

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - fds-network

  # ============= 처리 계층 =============
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.16
    container_name: logstash
    depends_on:
      - kafka
      - mariadb_account_system
      - mariadb_fds
      - redis
      - es01
    ports:
      - "5044:5044"  # Beats input
      - "5000:5000"  # TCP input
      - "9600:9600"  # Monitoring API
    volumes:
      - ./logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./config/mariadb-java-client-3.5.5.jar:/usr/share/logstash/config/mariadb-java-client-3.5.5.jar:ro
      - ./data/GeoLite2-City.mmdb:/usr/share/logstash/GeoLite2-City.mmdb:ro
    environment:
      LS_JAVA_OPTS: "-Xms1g -Xmx1g"
      XPACK_MONITORING_ENABLED: "false"
    networks:
      - fds-network

  # ============= 저장 계층 (Elasticsearch) =============
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.16
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=fds-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - fds-network

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.16
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=fds-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - fds-network

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.16
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=fds-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata03:/usr/share/elasticsearch/data
    networks:
      - fds-network

  # ============= 시각화 및 모니터링 계층 =============
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.16
    container_name: kibana
    depends_on:
      - es01
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
      XPACK_SECURITY_ENABLED: "false"
    networks:
      - fds-network

  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    networks:
      - fds-network

  # ============= 로그 수집 =============
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.16
    container_name: filebeat
    user: root
    depends_on:
      - logstash
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: filebeat -e -strict.perms=false
    networks:
      - fds-network

  # ============= 데이터 생성 =============
  producer:
    build:
      context: ./producers
      dockerfile: Dockerfile
    container_name: producer
    depends_on:
      - kafka
    networks:
      - fds-network
    command: tail -f /dev/null  # 대기 상태 유지

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  mariadb_account_data:
    driver: local
  mariadb_fds_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local

networks:
  fds-network:
    driver: bridge